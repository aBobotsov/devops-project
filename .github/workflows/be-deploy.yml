name: Deploy Backend Workflow
run-name: Deploy Backend to ${{ inputs.deploy_target }} by @${{ github.actor }}
on:
  push:
    branches:
      - master

# can't believe my eyes -> https://github.com/orgs/community/discussions/41518
# currently Pending concurrent workflows are cancelled and this is not configurable.
# The following workarounds exist to achieve deployment queues:
# - running the workflow on a single self-hosted runner
# - using a 3rd-party action - https://github.com/ahmadnassri/action-workflow-queue
#concurrency:
#  group: ${{ github.ref }}
#  cancel-in-progress: false

jobs:
  build-image:
    name: Build, push and scan docker image
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deploy workflow queue
        # Runs additional steps only if there is no other instance of the workflow running
        # timeout - 10 minutes
        # status polling interval - 10 seconds
        uses: ahmadnassri/action-workflow-queue@v1

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY_BE }}
          flavor: latest=auto
          tags: |
            type=sha, format=long
            type=raw, value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./be
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY_BE }}:sha-${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"

          # TODO: add deployment with terraform
