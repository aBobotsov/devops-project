name: Deploy Frontend Workflow
run-name: ${{github.event_name}} by @${{ github.actor }}
on:
  push:
    branches:
      - master
    paths:
      - 'fe/**'

jobs:
  build-image:
    name: Build, push and scan docker image
    runs-on: ubuntu-latest
    steps:
      - name: Wait for deploy workflow queue
        # Runs additional steps only if there is no other instance of the workflow running
        # timeout - 10 minutes
        # status polling interval - 10 seconds
        uses: ahmadnassri/action-workflow-queue@v1

      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY_FE }}
          tags: |
            type=sha, format=long
            type=raw, value=latest

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./fe
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY_FE }}:sha-${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL"

  deploy:
    needs: build-image
    name: Provision infra and deploy app
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.0"

      - name: Terraform init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform apply
        run: terraform apply -auto-approve -var fe_image_tag="sha-${{github.sha}}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
