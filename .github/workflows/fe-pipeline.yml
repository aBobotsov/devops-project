name: Frontend Workflow
run-name: Deploy to ${{ inputs.deploy_target }} by @${{ github.actor }}
on:
#    pull_request:
#        types: [ opened, synchronize, reopened ]
  push:
#    paths:
#        - 'fe/**'

jobs:
#  Check-editorconfig:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Setup python
#        uses: actions/setup-python@v4
#
#      - uses: editorconfig-checker/action-editorconfig-checker@main
#      - name: Editor config check
#        run: editorconfig-checker
#
#  Markdown-lint:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v4
#
#      - name: Lint with Markdown-lint
#        uses: articulate/actions-markdownlint@v1
#        with:
#          config: .markdownlint.yml
#          files: '**/*.md'
#          ignore: node_modules
#
#  Check-hardcoded-secrets:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Shallow checkout
#        uses: actions/checkout@v4
#        # with:
#        #   fetch-depth: 1
#      - uses: gitleaks/gitleaks-action@v2
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  tests:
    name: FE Unit tests
#    needs: [Check-editorconfig, Markdown-lint, Check-hardcoded-secrets]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'
      - name: Install deps and run tests
        working-directory: ./fe
        run: |
          echo workspace=${{ github.workspace }}
          echo listing files:
          ls ${{ github.workspace }}
          npm ci
          npm test

  sonar:
    name: SonarCloud scan
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clone is recommended for improving relevancy of reporting
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.verbose=true

  build-image:
    name: Build, push and scan docker image
    needs: [sonar]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to Dockerhub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY_FE }}
          tags: |
            type=sha, format=long

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push docker image
        uses: docker/build-push-action@v5
        with:
          context: ./fe
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/${{ vars.DOCKERHUB_NAMESPACE }}/${{ vars.DOCKERHUB_REPOSITORY_FE }}:sha-${{ github.sha }}"
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "HIGH,CRITICAL"
